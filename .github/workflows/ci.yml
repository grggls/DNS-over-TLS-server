name: CI

on:
  push:
    branches: [ main, develop, 'feature/*', 'refactor/*', 'modernize/*' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install Rye
      run: |
        curl -sSf https://rye-up.com/get | bash
        echo "$HOME/.rye/shims" >> $GITHUB_PATH

    - name: Install dependencies
      run: rye sync

    - name: Lint YAML files
      run: |
        pip install yamllint
        yamllint .github/ *.yml *.yaml

    - name: Lint GitHub Actions workflows
      run: |
        curl -sSfL https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/install-actionlint.bash | bash -s
        actionlint

    - name: Lint Python code
      run: |
        rye run black --check src/ tests/
        rye run isort --check-only src/ tests/
        rye run flake8 src/ tests/

    - name: Security linting
      run: |
        rye run pip install bandit safety
        rye run bandit -r src/ -f json -o bandit-report.json || true
        rye run safety check --json --output safety-report.json || true
        echo "Security scans completed"

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Rye
      run: |
        curl -sSf https://rye-up.com/get | bash
        echo "$HOME/.rye/shims" >> $GITHUB_PATH

    - name: Install dependencies
      run: rye sync

    - name: Run tests
      run: rye run pytest

    - name: Run type checking
      run: rye run mypy src/

  docker:
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: docker build --tag dns-over-tls-server .

    - name: Test Docker image
      run: |
        docker run --rm -d --name test-server -p 8053:8053 dns-over-tls-server
        sleep 5
        docker stop test-server 